{
    "Version": "2012-10-17",
    "Statement": [
        {
            "Sid": "VisualEditor0",
            "Effect": "Allow",
            "Action": [
                "iam:CreateServiceSpecificCredential",
                "iam:PutRolePolicy",
                "codedeploy:CreateDeploymentGroup",
                "s3:DeleteAccessPointForObjectLambda",
                "codedeploy:ListApplications",
                "iam:AddRoleToInstanceProfile",
                "iam:SimulateCustomPolicy",
                "lambda:DisableReplication",
                "lambda:DeleteFunction",
                "iam:DeleteOpenIDConnectProvider",
                "lambda:ListCodeSigningConfigs",
                "iam:PutGroupPolicy",
                "iam:GetRole",
                "lambda:ListFunctions",
                "lambda:GetEventSourceMapping",
                "s3:GetMultiRegionAccessPoint",
                "lambda:ListAliases",
                "s3:PutReplicationConfiguration",
                "s3:GetBucketNotification",
                "s3:DescribeMultiRegionAccessPointOperation",
                "s3:PutBucketNotification",
                "iam:UpdateServerCertificate",
                "lambda:GetFunctionConcurrency",
                "lambda:PutProvisionedConcurrencyConfig",
                "lambda:PublishVersion",
                "apigateway:POST",
                "s3:PutBucketObjectLockConfiguration",
                "s3:CreateJob",
                "iam:GetOpenIDConnectProvider",
                "lambda:DeleteEventSourceMapping",
                "codedeploy:GetDeploymentInstance",
                "codedeploy:GetOnPremisesInstance",
                "s3:GetLifecycleConfiguration",
                "s3:GetBucketTagging",
                "codedeploy:CreateDeployment",
                "iam:PutRolePermissionsBoundary",
                "codedeploy:DeleteResourcesByExternalId",
                "iam:ResetServiceSpecificCredential",
                "iam:DeleteRolePermissionsBoundary",
                "iam:PassRole",
                "lambda:ListTags",
                "iam:DeleteRolePolicy",
                "iam:EnableMFADevice",
                "iam:ResyncMFADevice",
                "s3:PutBucketVersioning",
                "s3:GetMultiRegionAccessPointPolicyStatus",
                "lambda:UpdateEventSourceMapping",
                "lambda:UpdateFunctionCodeSigningConfig",
                "apigateway:PUT",
                "iam:DeleteUser",
                "s3:PutInventoryConfiguration",
                "iam:GetContextKeysForCustomPolicy",
                "iam:CreatePolicy",
                "s3:DeleteStorageLensConfiguration",
                "s3:GetAccountPublicAccessBlock",
                "iam:CreateServiceLinkedRole",
                "s3:PutBucketWebsite",
                "s3:PutBucketRequestPayment",
                "s3:PutObjectRetention",
                "s3:CreateAccessPointForObjectLambda",
                "iam:AttachGroupPolicy",
                "iam:DeleteVirtualMFADevice",
                "lambda:DeleteAlias",
                "codedeploy:ListApplicationRevisions",
                "iam:UpdateRole",
                "lambda:GetCodeSigningConfig",
                "iam:DeleteServiceSpecificCredential",
                "s3:GetObjectVersion",
                "iam:DeleteSAMLProvider",
                "iam:UpdateAssumeRolePolicy",
                "iam:GetPolicyVersion",
                "s3:PutAnalyticsConfiguration",
                "iam:DeleteGroup",
                "s3:PutAccessPointConfigurationForObjectLambda",
                "s3:GetObjectVersionTagging",
                "iam:RemoveRoleFromInstanceProfile",
                "iam:UpdateGroup",
                "s3:GetStorageLensConfigurationTagging",
                "s3:ReplicateObject",
                "s3:GetBucketObjectLockConfiguration",
                "s3:DeleteBucketWebsite",
                "codedeploy:ListGitHubAccountTokenNames",
                "apigateway:GET",
                "iam:ChangePassword",
                "iam:UpdateLoginProfile",
                "codedeploy:UpdateApplication",
                "iam:GetServerCertificate",
                "lambda:UpdateFunctionEventInvokeConfig",
                "lambda:DeleteFunctionCodeSigningConfig",
                "s3:GetJobTagging",
                "lambda:InvokeFunction",
                "iam:GetAccessKeyLastUsed",
                "lambda:AddLayerVersionPermission",
                "iam:UpdateSSHPublicKey",
                "s3:PutBucketCORS",
                "lambda:UpdateAlias",
                "lambda:ListFunctionsByCodeSigningConfig",
                "s3:DescribeJob",
                "iam:UpdateAccountPasswordPolicy",
                "lambda:ListEventSourceMappings",
                "codedeploy:DeleteApplication",
                "iam:DeleteServiceLinkedRole",
                "s3:GetObjectVersionForReplication",
                "s3:GetAccessPointForObjectLambda",
                "lambda:CreateAlias",
                "s3:PutAccelerateConfiguration",
                "s3:DeleteObjectVersion",
                "s3:GetBucketLogging",
                "s3:RestoreObject",
                "iam:DeletePolicy",
                "s3:GetAccelerateConfiguration",
                "iam:CreateVirtualMFADevice",
                "lambda:GetLayerVersionPolicy",
                "s3:GetBucketPolicy",
                "lambda:PutFunctionConcurrency",
                "lambda:DeleteCodeSigningConfig",
                "s3:PutEncryptionConfiguration",
                "s3:GetEncryptionConfiguration",
                "iam:AddUserToGroup",
                "s3:GetBucketRequestPayment",
                "s3:GetAccessPointPolicyStatus",
                "lambda:DeleteLayerVersion",
                "s3:GetObjectTagging",
                "lambda:DeleteFunctionEventInvokeConfig",
                "iam:CreatePolicyVersion",
                "codedeploy:ListDeploymentConfigs",
                "s3:GetMultiRegionAccessPointPolicy",
                "iam:GetInstanceProfile",
                "s3:GetAccessPointPolicyStatusForObjectLambda",
                "lambda:GetFunction",
                "codedeploy:ContinueDeployment",
                "codedeploy:DeleteDeploymentGroup",
                "lambda:AddPermission",
                "lambda:GetFunctionEventInvokeConfig",
                "codedeploy:GetDeployment",
                "iam:UpdateSigningCertificate",
                "lambda:DeleteFunctionConcurrency",
                "s3:GetAccessPointPolicy",
                "s3:ReplicateDelete",
                "lambda:CreateFunction",
                "iam:GetAccountPasswordPolicy",
                "iam:DeactivateMFADevice",
                "codedeploy:PutLifecycleEventHookExecutionStatus",
                "iam:DeleteAccessKey",
                "iam:GenerateServiceLastAccessedDetails",
                "s3:DeleteAccessPoint",
                "iam:UpdateOpenIDConnectProviderThumbprint",
                "lambda:GetFunctionConfiguration",
                "iam:SetSecurityTokenServicePreferences",
                "codedeploy:CreateCloudFormationDeployment",
                "apigateway:UpdateRestApiPolicy",
                "lambda:GetProvisionedConcurrencyConfig",
                "s3:PutLifecycleConfiguration",
                "iam:DeleteServerCertificate",
                "iam:UploadSSHPublicKey",
                "iam:DetachGroupPolicy",
                "lambda:ListLayers",
                "s3:DeleteObject",
                "iam:GetCredentialReport",
                "lambda:GetAlias",
                "s3:CreateMultiRegionAccessPoint",
                "iam:UpdateServiceSpecificCredential",
                "s3:GetBucketWebsite",
                "iam:GetPolicy",
                "codedeploy:RegisterApplicationRevision",
                "codedeploy:DeleteDeploymentConfig",
                "iam:RemoveClientIDFromOpenIDConnectProvider",
                "iam:DeleteRole",
                "iam:UpdateRoleDescription",
                "s3:GetObjectLegalHold",
                "s3:GetReplicationConfiguration",
                "lambda:GetFunctionCodeSigningConfig",
                "s3:PutObject",
                "lambda:UpdateFunctionCode",
                "codedeploy:ListDeploymentGroups",
                "iam:GetRolePolicy",
                "s3:GetStorageLensDashboard",
                "iam:CreateInstanceProfile",
                "iam:GenerateCredentialReport",
                "s3:GetInventoryConfiguration",
                "codedeploy:GetApplicationRevision",
                "s3:GetAccessPointPolicyForObjectLambda",
                "codedeploy:GetDeploymentConfig",
                "lambda:InvokeAsync",
                "codedeploy:CreateDeploymentConfig",
                "codedeploy:UpdateDeploymentGroup",
                "iam:GetServiceLastAccessedDetails",
                "lambda:RemoveLayerVersionPermission",
                "apigateway:DELETE",
                "iam:GetServiceLinkedRoleDeletionStatus",
                "codedeploy:ListDeploymentInstances",
                "apigateway:SetWebACL",
                "s3:AbortMultipartUpload",
                "codedeploy:ListTagsForResource",
                "s3:UpdateJobPriority",
                "iam:DeleteAccountAlias",
                "codedeploy:GetApplication",
                "s3:DeleteBucket",
                "iam:UpdateSAMLProvider",
                "lambda:PutFunctionCodeSigningConfig",
                "iam:DeleteInstanceProfile",
                "s3:PutIntelligentTieringConfiguration",
                "s3:PutMetricsConfiguration",
                "iam:GetSSHPublicKey",
                "iam:PutUserPermissionsBoundary",
                "lambda:UpdateFunctionConfiguration",
                "s3:GetBucketVersioning",
                "iam:DeleteUserPermissionsBoundary",
                "apigateway:RemoveCertificateFromDomain",
                "s3:GetAccessPointConfigurationForObjectLambda",
                "lambda:UpdateCodeSigningConfig",
                "s3:GetStorageLensConfiguration",
                "iam:PutUserPolicy",
                "s3:GetBucketCORS",
                "iam:GetUser",
                "iam:AddClientIDToOpenIDConnectProvider",
                "lambda:RemovePermission",
                "iam:SetDefaultPolicyVersion",
                "s3:PutStorageLensConfiguration",
                "lambda:DeleteProvisionedConcurrencyConfig",
                "apigateway:AddCertificateToDomain",
                "s3:CreateBucket",
                "iam:CreateRole",
                "iam:AttachRolePolicy",
                "lambda:EnableReplication",
                "iam:CreateLoginProfile",
                "codedeploy:ListOnPremisesInstances",
                "s3:GetObjectAcl",
                "lambda:ListProvisionedConcurrencyConfigs",
                "s3:GetIntelligentTieringConfiguration",
                "iam:DetachRolePolicy",
                "iam:SimulatePrincipalPolicy",
                "iam:CreateAccountAlias",
                "codedeploy:RegisterOnPremisesInstance",
                "s3:GetObjectVersionAcl",
                "lambda:ListLayerVersions",
                "iam:DetachUserPolicy",
                "iam:GetAccountAuthorizationDetails",
                "codedeploy:SkipWaitTimeForInstanceTermination",
                "s3:GetBucketPolicyStatus",
                "codedeploy:GetDeploymentGroup",
                "iam:CreateGroup",
                "s3:GetObjectRetention",
                "iam:UpdateUser",
                "iam:DeleteUserPolicy",
                "iam:AttachUserPolicy",
                "iam:UpdateAccessKey",
                "s3:PutObjectLegalHold",
                "codedeploy:ListDeploymentTargets",
                "s3:GetObject",
                "lambda:ListFunctionEventInvokeConfigs",
                "iam:DeleteSigningCertificate",
                "s3:PutBucketLogging",
                "iam:GetUserPolicy",
                "s3:GetAnalyticsConfiguration",
                "iam:GetGroupPolicy",
                "s3:CreateAccessPoint",
                "s3:GetAccessPoint",
                "codedeploy:CreateApplication",
                "lambda:ListVersionsByFunction",
                "lambda:GetLayerVersion",
                "iam:GetServiceLastAccessedDetailsWithEntities",
                "lambda:PublishLayerVersion",
                "iam:DeleteSSHPublicKey",
                "codedeploy:DeregisterOnPremisesInstance",
                "iam:CreateSAMLProvider",
                "lambda:GetAccountSettings",
                "lambda:CreateEventSourceMapping",
                "iam:CreateUser",
                "iam:GetGroup",
                "iam:GetOrganizationsAccessReport",
                "iam:CreateAccessKey",
                "iam:GetContextKeysForPrincipalPolicy",
                "s3:GetObjectVersionTorrent",
                "iam:RemoveUserFromGroup",
                "iam:GenerateOrganizationsAccessReport",
                "apigateway:PATCH",
                "lambda:PutFunctionEventInvokeConfig",
                "s3:GetMetricsConfiguration",
                "s3:GetBucketOwnershipControls",
                "iam:GetSAMLProvider",
                "lambda:CreateCodeSigningConfig",
                "iam:DeleteLoginProfile",
                "s3:GetBucketPublicAccessBlock",
                "iam:UploadSigningCertificate",
                "iam:DeleteAccountPasswordPolicy",
                "codedeploy:DeleteGitHubAccountToken",
                "codedeploy:ListDeployments",
                "s3:PutBucketOwnershipControls",
                "codedeploy:StopDeployment",
                "s3:DeleteMultiRegionAccessPoint",
                "s3:UpdateJobStatus",
                "s3:GetBucketAcl",
                "iam:CreateOpenIDConnectProvider",
                "iam:UploadServerCertificate",
                "s3:GetObjectTorrent",
                "iam:DeleteGroupPolicy",
                "s3:GetBucketLocation",
                "iam:DeletePolicyVersion",
                "lambda:GetPolicy"
            ],
            "Resource": "*"
        }
    ]
}